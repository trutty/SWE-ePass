extends ../../layout

block content
    - var scores = [0, 1, 2, 3, 4]

    form#examUpdate.k-content(action='/exam/assess/' + exam.id, method='post')
        table
            tr
                th
                    label(for='name')
                        | Name:
                td
                    input#name.k-textbox(type='text', name='name', disabled, value= exam.name)

            tr
                th
                    label(for='user')
                        | Tutor:
                td
                    input#tutor.k-textbox(type='text', name='tutor', disabled, value= exam.user.name)

            tr
                th
                    label(for='assessor')
                        | Assessor:
                td
                    each item in exam.assessor
                        input.k-textbox(type='text', name='assessor[]', disabled, value= item.name)
                        br

            tr
                th
                    label(for='course')
                        | Student:
                td
                    select.k-header(name='student')
                        each course in courses
                            optgroup(label='#{course.name}')
                            each student in course.userlist
                                option(value='#{student.id}') #{student.lastname}, #{student.firstname}

            tr
                th
                    label(for='lecture')
                        | Lecture:
                td
                    input#lecture.k-textbox(type='text', name='lecture', required='true', disabled, value= exam.lecture)

            tr
                th
                    label(for='date')
                        | Date: 
                td
                    input#date.k-textbox(type='text', name='date', disabled, value= exam.date)

            tr
                th
                    label(for='duration')
                        | Duration in minutes: 
                td
                    input#duration.k-textbox(type='number', name='duration', min='0', disabled, value= exam.duration)

            tr
                th
                    label(for='criteria')
                        | Criteria:
                td	
                    ul.criteria
                        each crit, i in exam.criteria
                            if crit != null
                                li
                                    input.k-textbox(type='hidden', name='criteria[#{i}][id]', required='true', readonly, value= crit._id)
                                    input.criteriaName.k-textbox(type='text', name='criteria[#{i}][name]', required='true', placeholder='Name', readonly, value= crit.name)
                                    input.criteriaDesc.k-textbox(type='text', name='criteria[#{i}][description]', placeholder='Description', readonly, value= crit.description)
                                    input.criteriaScore.k-textbox(type='number', min='0', name='criteria[#{i}][score]', required='true', placeholder='Score', readonly, value= crit.score)

                                    if crit.subcriteria.length == 0
                                        each score in scores
                                            if exam.gradeType == 'continuous'
                                                input.assessCriteria.k-button(type='number', min='0', max='1', step='0.05', name='criteria[#{i}][assessScore][#{score}]', required = true, value = 0.00)
                                            else
                                                input.assessCriteria.k-button(type='number', min='0', name='criteria[#{i}][assessScore][#{score}]', required = true, value = 0)
                                    else
                                        each score in scores
                                            input.assessCriteria.k-button(type='hidden', name='criteria[#{i}][assessScore][#{score}]', required = true, value = 0)

                                    ul.subcriteria
                                        each subcrit, n in crit.subcriteria
                                            if subcrit != null
                                                li.subcriteria
                                                    input.k-textbox.subcriteriaMyId(type='hidden', name='criteria[#{i}][subcriteria][#{n}][myId]', readonly, value= subcrit.myId)
                                                    input.k-textbox.subcriteriaName(type='text', required='true', placeholder='Name', name='criteria[#{i}][subcriteria][#{n}][name]', readonly, value= subcrit.name)
                                                    input.k-textbox.subcriteriaDesc(type='text', placeholder='Description', name='criteria[#{i}][subcriteria][#{n}][description]', readonly, value= subcrit.description)
                                                    input.k-textbox.subcriteriaScore(type='number', min='0', required='true', placeholder='Score', name='criteria[#{i}][subcriteria][#{n}][score]', readonly, value= subcrit.score)
                                                    each score in scores
                                                        if exam.gradeType == 'continuous'
                                                            input.assessCriteria.k-button(type='number', min='0', max='1', step='0.05', name='criteria[#{i}][subcriteria][#{n}][assessScore][#{score}]', required='true', value = 0.00)
                                                        else
                                                            input.assessCriteria.k-button(type='number', min='0', name='criteria[#{i}][subcriteria][#{n}][assessScore][#{score}]', required='true', value = 0)

            tr
                td
                    input(class='k-button', type='submit', value='Save')
                td
            
            tr
                td
                    
                td
                    p#pointsError

    script
        
        $('#examUpdate').submit(function (e) {
        
            $('#pointsError').html('');
            var overallCriteriaPoints = Number(0);
            var criteriaPoints = Number(0);
            var error = false;

            $('ul.criteria > li').each(function (index, criteria) {

                var subcriteriaPointsSum = [0, 0, 0, 0, 0];
                // check for subcriteria
                if($(criteria).children('.subcriteria').children('li').length > 0) {
                    $(criteria).children('.subcriteria').children('li').each(function(index, subcriteria) {

                        var maximumSubCriteriaPoints = parseFloat($(subcriteria).children('.subcriteriaScore').val());
                        var definedSubCriteriaPoints = 0.0;

                        $(subcriteria).children('.assessCriteria').each(function(index, point) {
                            definedSubCriteriaPoints += parseFloat($(point).val());
                            subcriteriaPointsSum[index] += parseFloat($(point).val());
                        });

                        if(definedSubCriteriaPoints != maximumSubCriteriaPoints)
                            error = true;

                    });

                    $(criteria).children('.assessCriteria').each(function(index, point) {
                        if("#{exam.gradeType}" == "continuous") {
                            $(point).val(subcriteriaPointsSum[index] / $(criteria).children('.subcriteria').children('li').length);
                        } else {
                            $(point).val(subcriteriaPointsSum[index]);
                        }
                    });
                }

                var maximumCriteriaPoints = parseFloat($(criteria).children('.criteriaScore').val());
                var definedCriteriaPoints = 0.0;

                $(criteria).children('.assessCriteria').each(function(index, point) {
                    definedCriteriaPoints += parseFloat($(point).val());
                });

                if(Math.ceil(definedCriteriaPoints) != Math.ceil(maximumCriteriaPoints))
                    error = true;

                if (error) {
                    $('#pointsError').append('Wrong amount of points was given at: <strong>'+$(this).children('input.criteriaName').val()+'</strong>.<br />');
                    return false;
                }

            });

            if (error) {
                return false;
            }
            
        });

    
    script

        var updateCurrentStudent = function(studentId) {

            $('input.assessCriteria').val(0);

            $.getJSON('/api/exampoints/#{exam.id}/' + studentId, function(examPoints) {

                if(examPoints) {
                    examPoints.criteriaPoints.forEach(function(crit, index) {
                        var criteria = $('input:hidden').filter(function() { return $(this).val() === crit.criteria; }).parent();
                        var subcriterias = criteria.find('.subcriteria');

                        criteria.children('.assessCriteria').each(function(index, point) {
                            $(point).val(crit.points[index]);
                        });

                        crit.subpoints.forEach(function(subcrit, index) {
                            
                            var subcriteria = subcriterias.find('input:hidden').filter(function() { return $(this).val() === subcrit.myId; }).parent();
                            subcriteria.children('.assessCriteria').each(function(index, point) {
                                $(point).val(subcrit.assessScore[index]);
                            });

                        });

                    });
                }

            });

        };

        



        updateCurrentStudent($('select[name=student]').val());

        $('select[name=student]').change(function(){
            updateCurrentStudent($(this).val());
        });